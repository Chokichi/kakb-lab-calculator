// Auto-generated calculator configurations
// Generated on: 2025-10-25T00:47:33.142Z
// Do not edit this file manually - it will be overwritten

export interface CalculatorConfig {
  id: string;
  name: string;
  description: string;
  csvFile: string;
  icon?: string;
  color?: string;
  labType?: string;
}

export const calculators: CalculatorConfig[] = [
  {
    "id": "colligative-properties-key-csv",
    "name": "Colligative Properties Lab",
    "description": "Laboratory calculation tool",
    "csvFile": "/Colligative Properties Key CSV_HeaderBased.csv",
    "icon": "🔬",
    "color": "#2196F3",
    "labType": "default"
  },
  {
    "id": "kakb",
    "name": "Determination of Ka and Kb",
    "description": "Dual-trial acid-base equilibrium calculations",
    "csvFile": "/KaKb_HeaderBased.csv",
    "icon": "⚗️",
    "color": "#2196F3",
    "labType": "acid"
  },
  {
    "id": "titration",
    "name": "Titration of a Diprotic Acid",
    "description": "Single-trial titration calculations with equivalence points",
    "csvFile": "/Titration_HeaderBased.csv",
    "icon": "🧪",
    "color": "#4CAF50",
    "labType": "titration"
  }
];

export const getCalculatorById = (id: string): CalculatorConfig | undefined => {
  return calculators.find(calc => calc.id === id);
};

export const getDefaultCalculator = (): CalculatorConfig => {
  return calculators[0] || {
    id: 'default',
    name: 'Lab Calculator',
    description: 'Laboratory calculation tool',
    csvFile: '/default.csv',
    icon: '🔬',
    color: '#2196F3'
  };
};

export const getCalculatorsByLabType = (labType: string): CalculatorConfig[] => {
  return calculators.filter(calc => calc.labType === labType);
};
